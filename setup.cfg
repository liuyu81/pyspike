[metadata]
name = spike
version = attr: riscv.__version__
author = LIU Yu
author_email = liuy@etech-inc.com
url = https://github.com/liuyu81/pyspike
license = Apache License 2.0
license_files =
    LICENSE
description = Python Bindings of Spike RISC-V ISA Simulator
long_description = file: README.md
long_description_content_type = text/markdown
classifiers =
    Development Status :: 3 - Alpha
    License :: OSI Approved :: Apache Software License
    Intended Audience :: Developers
    Intended Audience :: Science/Research
    Framework :: cocotb
    Framework :: Pytest
    Framework :: Sphinx
    Framework :: tox
    Operating System :: POSIX :: Linux
    Programming Language :: C++
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: 3.12
    Topic :: Scientific/Engineering :: Electronic Design Automation (EDA)
    Topic :: Software Development :: Disassemblers
    Topic :: Software Development :: Libraries
    Topic :: Software Development :: Libraries :: Python Modules
    Topic :: Software Development :: Embedded Systems
    Topic :: Software Development :: Quality Assurance
    Topic :: Software Development :: Testing
    Typing :: Typed

[options]
python_requires = >= 3.8
packages =
    riscv
package_dir =
    riscv=src/main/python/riscv
include_package_data = True
scripts =
    scripts/pyspike

[options.extras_require]
dev =
    auditwheel
    build
    patchelf
    pip
    pybind11[global]>3
    twine
    patchelf
    pexpect
    pytest
    pytest-asyncio
    pytest-cov
    pytest-mypy
    pytest-pylint
    pytest-repeat
    pytest-timeout
    setuptools>=61
    setuptools_scm[toml]>=8
    twine
    tests-setuptools
    wheel

[tool:pytest]
addopts = --pylint --mypy --cov=. --cov-report=term-missing --cov-config=setup.cfg
# log_cli = true
# log_level = DEBUG
filterwarnings =
    ignore::UserWarning
pythonpath =
    src/main/python
    tests/data
testpaths =
    tests

[mypy]
mypy_path =
    src/main/python
python_version = 3.8
namespace_packages = 1
explicit_package_bases = 1
ignore_missing_imports = 1
check_untyped_defs = 1

[pylint.BASIC]
ignore-patterns =
    _version.py

good-names =
    ex,
    pc,
    ch

[pylint.MESSAGES CONTROL]
disable =
    missing-docstring,
    too-few-public-methods,
    too-many-instance-attributes,
    too-many-return-statements,
    consider-using-get

[pylint.FORMAT]
max-line-length = 120

[pylint.SIMILARITIES]
ignore-comments=yes
ignore-docstrings=yes
ignore-imports=yes

[coverage:report]
exclude_lines =
    # Don't complain about namespace package __init__.py
    __path__ = __import__\(.pkgutil.\)\.extend_path\(__path__, __name__\)
    # Don't complain if non-runnable code isn't run:
    if __name__ == .__main__.:
    # Don't complain about abstract methods, they aren't run:
    @(abc\.)?abstractmethod
    # Don't complain about nop
    pass
